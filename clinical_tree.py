# -*- coding: utf-8 -*-
"""XGBoost_tree.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1T4M4WgwOZHDT5WUQU-MI4ex7alIgJTPY
"""

import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from xgboost import XGBClassifier
from sklearn.utils import shuffle
import matplotlib.pyplot as plt
from xgboost import plot_tree
from sklearn.metrics import roc_auc_score, f1_score,accuracy_score, cohen_kappa_score ,matthews_corrcoef, roc_curve,auc, precision_score, recall_score

from sklearn.tree import DecisionTreeClassifier, export_graphviz
from sklearn import tree
from sklearn.metrics import accuracy_score

r_state=75

covid_data = pd.read_csv('processed_covid_data.csv')
df = pd.DataFrame(covid_data)
df = df.drop('Unnamed: 0', axis=1)

features = np.array(df.columns[:-1])
target = 'survival'
df.rename(columns = lambda x: x.replace(' ', '_'), inplace=True)

features = np.array(df.columns[:-1])
features = ['hospital_duration', 'rate_Po2', 'Age', 'Intubation'] #Taking only top 4 features selected by xgboost model
target = 'survival'

X_train, X_test, y_train, y_test = train_test_split(df[features], df[target],test_size=0.2, random_state=75)
model = XGBClassifier(n_estimators=1, max_depth=3,min_samples_leaf=5, random_state=r_state)
model.fit(X_train, y_train)

fig = plt.figure(figsize=(8,9))
plot_tree(model)
fig = plt.gcf()
fig.set_size_inches(150, 100)
fig.savefig('tree.png')
plt.show()

dtmodel = DecisionTreeClassifier(max_depth=3, min_samples_leaf=5,random_state=r_state )
dtmodel.fit(X_train, y_train)
fig = plt.figure(figsize =(70,60))
_ = tree.plot_tree(dtmodel, feature_names = features,
                    class_names = ['0','1'],
                    filled=True)






















